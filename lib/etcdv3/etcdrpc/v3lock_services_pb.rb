# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: v3lock.proto for package 'v3lockpb'
require_relative 'v3lock_pb'

module V3lockpb
  module Lock
    # The lock service exposes client-side locking facilities as a gRPC interface.
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'v3lockpb.Lock'

      # Lock acquires a distributed shared lock on a given named lock.
      # On success, it will return a unique key that exists so long as the
      # lock is held by the caller. This key can be used in conjunction with
      # transactions to safely ensure updates to etcd only occur while holding
      # lock ownership. The lock is held until Unlock is called on the key or the
      # lease associate with the owner expires.
      rpc :Lock, LockRequest, LockResponse
      # Unlock takes a key returned by Lock and releases the hold on lock. The
      # next Lock caller waiting for the lock will then be woken up and given
      # ownership of the lock.
      rpc :Unlock, UnlockRequest, UnlockResponse
    end

    Stub = Service.rpc_stub_class
  end
end
